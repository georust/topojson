on:
  push:
    branches:
      - main
      - staging
      - trying
  pull_request:

name: topojson ci

jobs:
  # The `ci-result` job doesn't actually test anything - it just aggregates the
  # overall build status for bors, otherwise our bors.toml would need an entry
  # for each individual job produced by the job-matrix.
  #
  # Ref: https://github.com/rust-lang/crater/blob/9ab6f9697c901c4a44025cf0a39b73ad5b37d198/.github/workflows/bors.yml#L125-L149
  #
  # ALL THE SUBSEQUENT JOBS NEED THEIR `name` ADDED TO THE `needs` SECTION OF THIS JOB!
  ci-result:
    name: ci result
    runs-on: ubuntu-latest
    needs:
      - Build
      - Test
      - Clippy
      - fmt
    steps:
      - name: Mark the job as a success
        if: success()
        run: exit 0
      - name: Mark the job as a failure
        if: "!success()"
        run: exit 1

  build:
    name: Build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust: [nightly, beta, stable]

    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          override: true

      - name: Run cargo build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --verbose

  test:
    name: Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        geojson_version:
          - 0.16.0
          - 0.17.0
          - 0.18.0
          - 0.19.0
          - 0.20.1
          - 0.21.0
          - 0.22.0
          - 0.23.0
          - 0.24.0

    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Install geojson version ${{ matrix.geojson_version }}
        uses: actions-rs/cargo@v1
        with:
          command: update
          args: -p geojson --precise ${{ matrix.geojson_version }}

      - name: Run cargo test
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --verbose

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Install clippy
        run: rustup component add clippy

      - name: Run cargo clippy
        uses: actions-rs/cargo@v1
        continue-on-error: true
        with:
          command: clippy
          args: --all-targets --all-features -- -D warnings

  fmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Install rustfmt
        run: rustup component add rustfmt

      - name: Run cargo fmt
        uses: actions-rs/cargo@v1
        continue-on-error: true
        with:
          command: fmt
          args: --all -- --check
